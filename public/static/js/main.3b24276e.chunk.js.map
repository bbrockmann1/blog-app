{"version":3,"sources":["components/atoms.js","components/Navbar.js","components/Dropdown.js","components/SearchBar.js","components/Header.js","components/Footer.js","components/Homepage.js","logo.png","components/Layout.js","components/Login.js","components/Signup.js","components/UserBlogs.js","components/SelectedBlog.js","components/BlogForm.js","components/Done.js","components/ThankYou.js","App.js","reportWebVitals.js","index.js"],"names":["blogsAtom","atom","key","default","errorsAtom","currentUserAtom","emailAtom","passwordAtom","dropdownValueAtom","Navbar","useState","activeItem","setActiveItem","useRecoilState","setCurrentUser","errors","setErrors","handleItemClick","e","target","name","Segment","inverted","Menu","pointing","secondary","Item","active","onClick","as","Link","to","position","fetch","method","then","resp","ok","json","window","alert","DropdownComponent","setValue","onChange","value","initialState","loading","results","reducer","state","action","type","query","selection","Error","SearchBar","navigate","useNavigate","blogs","useRecoilValue","React","useReducer","dispatch","timeoutRef","useRef","handleSearchChange","useCallback","data","clearTimeout","current","setTimeout","length","re","RegExp","_","escapeRegExp","filter","test","title","useEffect","Grid","Column","width","Search","input","fluid","placeholder","onResultSelect","result","slug","onSearchChange","Dropdown","Header","Footer","padded","textAlign","Homepage","setBlogs","blogsArray","blogCards","map","blog","tag","category","Card","color","header","extra","content","substring","description","user","first_name","last_name","meta","id","Group","Layout","props","className","class","src","logo","alt","Form","size","autoComplete","children","Login","email","setEmail","password","setPassword","history","onSubmit","preventDefault","headers","body","JSON","stringify","Input","icon","iconPosition","Button","Message","Signup","firstName","setFirstName","lastName","setLastName","avatar","setAvatar","newUser","UserBlogs","currentUser","isEditing","setIsEditing","editedTitle","setEditedTitle","editedContent","setEditedContent","blogObj","setBlogID","a","prevUser","editedBlog","response","updatedBlog","userBlogCards","handleDelete","handleSubmit","Field","SelectedBlog","useParams","commentField","setCommentField","selectedBlog","find","reviews","review","comment","allComments","setAllComments","Container","height","newcomment","blog_id","user_id","configObject","BlogForm","setTitle","setContent","setTag","newBlog","tag_id","FormField","Done","List","ThankYou","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b24276e.chunk.js","sourcesContent":["import { atom } from 'recoil'\n\nexport const blogsAtom = atom({\n    key: 'blogs',\n    default: []\n});\n\nexport const signupAtom = atom({\n    key: 'signup',\n    default: false\n});\n\nexport const errorsAtom = atom({\n    key: 'errors',\n    default: []\n});\n\nexport const currentUserAtom = atom({\n    key: 'currentUser',\n    default: []\n});\n\nexport const emailAtom = atom({\n    key: 'email',\n    default: ''\n})\n\nexport const passwordAtom = atom({\n    key: 'password',\n    default: ''\n})\n\nexport const filteredBlogsAtom = atom({\n    key: 'filteredBlogs',\n    default: ''\n})\n\nexport const dropdownValueAtom = atom({\n    key: 'value',\n    default: 'All'\n})\n","import React, { useState } from 'react';\nimport { Menu, Segment } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { currentUserAtom, errorsAtom } from './atoms'\n\nconst Navbar = () => {\n  const [activeItem, setActiveItem] = useState('home');\n  // eslint-disable-next-line\n  const [currentUser, setCurrentUser] = useRecoilState(currentUserAtom)\n  const [errors, setErrors] = useRecoilState(errorsAtom);\n  \n  function handleLogout(e) {\n    setActiveItem(e.target.name);\n    fetch('/logout', {\n      method: 'DELETE'\n    })\n    .then(resp => {\n      if(resp.ok){\n        setCurrentUser([])\n      }else{\n        resp.json().then(json => {\n          setErrors(json.errors)\n          window.alert(errors)\n        })\n      }\n    })\n  };\n\n  function handleItemClick(e) {\n    setActiveItem(e.target.name);\n  };\n\n  return (\n    <Segment inverted>\n      <Menu inverted pointing secondary>\n        <Menu.Item\n          name='home'\n          active={activeItem === 'home'}\n          onClick={handleItemClick}\n          as={Link}\n          to={'/'}\n        />\n        <Menu.Item\n          name='my blogs'\n          active={activeItem === 'my blogs'}\n          onClick={handleItemClick}\n          as={Link}\n          to={'/blogs'}\n        />\n        <Menu.Item\n          name='make a new blog'\n          active={activeItem === 'make a new blog'}\n          onClick={handleItemClick}\n          as={Link}\n          to={'/create'}\n        />\n        <Menu.Item\n          position='right'\n          name='login'\n          active={activeItem === 'login'}\n          onClick={handleItemClick}\n          as={Link}\n          to={'/login'}\n        />\n        <Menu.Item\n          name='logout'\n          active={activeItem === 'logout'}\n          onClick={handleLogout}\n          as={Link}\n          to={'/login'}\n        />\n      </Menu>\n    </Segment>\n  );\n};\n\nexport default Navbar;\n","import { dropdownValueAtom } from './atoms';\nimport { useRecoilState } from 'recoil';\n\nconst DropdownComponent = () => {\n    // eslint-disable-next-line\n    const [value, setValue] = useRecoilState(dropdownValueAtom)\n\n    return (\n    <>\n    <label>\n        <strong>Filter by tags:</strong>\n        <select onChange={e => setValue(e.target.value)} >\n          <option value=\"All\">All</option>\n          <option value=\"Fashion\">Fashion</option>\n          <option value=\"Travel\">Travel</option>\n          <option value=\"Music\">Music</option>\n          <option value=\"DIY\">DIY</option>\n          <option value=\"Sports\">Sports</option>\n          <option value=\"Lifestyle\">Lifestyle</option>\n          <option value=\"Finance\">Finance</option>\n          <option value=\"Politics\">Politics</option>\n          <option value=\"Parenting\">Parenting</option>\n          <option value=\"Movies\">Movies</option>\n          <option value=\"Tech\">Tech</option>\n          <option value=\"Development\">Development</option>\n          <option value=\"Gaming\">Gaming</option>\n          <option value=\"Auto\">Auto</option>\n        </select>\n      </label>\n    </>\n    )\n}\n\nexport default DropdownComponent\n","import _ from 'lodash'\nimport React from 'react'\nimport { Search, Grid } from 'semantic-ui-react'\nimport { useRecoilValue } from 'recoil'\nimport { blogsAtom } from './atoms'\nimport DropdownComponent from './Dropdown'\nimport { useNavigate } from 'react-router-dom';\n\nconst initialState = {\n  loading: false,\n  results: [],\n  value: '',\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CLEAN_QUERY':\n      return initialState\n    case 'START_SEARCH':\n      return { ...state, loading: true, value: action.query }\n    case 'FINISH_SEARCH':\n      return { ...state, loading: false, results: action.results }\n    case 'UPDATE_SELECTION':\n      return { ...state, value: action.selection }\n\n    default:\n      throw new Error()\n  }\n}\n\nfunction SearchBar() {\n  const navigate = useNavigate();\n  const blogs = useRecoilValue(blogsAtom);\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n  const { loading, results, value } = state\n\n  const timeoutRef = React.useRef();\n\n  const handleSearchChange = React.useCallback((e, data) => {\n    clearTimeout(timeoutRef.current)\n    dispatch({ type: 'START_SEARCH', query: data.value })\n\n    timeoutRef.current = setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({ type: 'CLEAN_QUERY' })\n        return\n      }\n\n      const re = new RegExp(_.escapeRegExp(data.value), 'i')\n      const isMatch = (blogs) => re.test(blogs.title)\n\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: _.filter(blogs, isMatch),\n      })\n    }, 300)\n  }, [blogs])\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current)\n    }\n  }, [])\n\n  return (\n    <>\n      <Grid>\n          <Grid.Column width={12}>\n            <Search\n              input={{ fluid: true }}\n              loading={loading}\n              placeholder='Search...'\n              onResultSelect={(e, data) => {\n                dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title });\n                navigate(`/${data.result.slug}`);\n              }}\n              onSearchChange={handleSearchChange}\n              results={results}\n              value={value}\n              onClick={null}\n            />\n          </Grid.Column>\n        <DropdownComponent />  \n      </Grid>\n      \n    </>\n  )\n}\n\nexport default SearchBar\n","import Navbar from \"./Navbar\";\nimport SearchBar from \"./SearchBar\";\n\nfunction Header() {\n\n  return (\n    <>\n    <Navbar />\n    <SearchBar />\n    </>\n  );\n}\n\nexport default Header;\n","import { Segment } from 'semantic-ui-react'\n\nfunction Footer() {\n\n  return (\n    <Segment inverted padded textAlign='center' >\n        <div >\n          © 2022 All rights reserved.  \n        </div>\n    </Segment>\n  );\n}\n\nexport default Footer;\n\n\n","import { Card } from 'semantic-ui-react';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { blogsAtom } from './atoms.js';\nimport { dropdownValueAtom } from './atoms.js';\n\nfunction Homepage() {\n  const navigate = useNavigate();\n  const [blogs, setBlogs] = useRecoilState(blogsAtom);\n  const value = useRecoilValue(dropdownValueAtom);\n  \n\n  useEffect(() => {\n    fetch('/blogs')\n    .then(resp => resp.json())\n    .then(blogsArray => {\n      setBlogs(blogsArray)\n    })\n  }, [setBlogs])\n\n// eslint-disable-next-line\n  const blogCards = blogs.map((blog) => {\n    if (value === \"All\" || blog.tag.category === value) {\n      return (\n        <Card \n          key={blog.id}\n          fluid color='black' \n          header={blog.title} \n          extra={`${blog.content.substring(0,300)}...`}\n          description={`Written by: ${blog.user.first_name} ${blog.user.last_name}`}\n          meta={`category: ${blog.tag.category}`}\n          onClick={() => navigate(`/${blog.slug}`)}\n        />\n      );\n    }\n  });\n\n\n  return (\n    <Card.Group>\n      {blogCards}\n    </Card.Group>\n  );\n}\n\nexport default Homepage;","export default __webpack_public_path__ + \"static/media/logo.4e14894b.png\";","import React from \"react\";\nimport { Form, Header } from \"semantic-ui-react\";\nimport \"./auth.css\";\nimport logo from '../logo.png';\n\nfunction Layout(props) {\n  return (\n    <div className=\"auth-main\">\n      <div class=\"auth-content\">\n        <div className=\"auth-card\">\n          <img src={logo} alt=\"Logo\" className=\"auth-logo\" />\n          <Header as=\"h2\" color=\"black\" textAlign=\"center\">\n            {props.header}\n          </Header>\n          <Form.Group size=\"large\" className=\"auth-form\" autoComplete=\"off\">\n            {props.children}\n          </Form.Group>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import { Link, useNavigate } from \"react-router-dom\";\nimport { Button, Form, Message } from \"semantic-ui-react\";\nimport Layout from \"./Layout\";\nimport { useRecoilState } from 'recoil';\nimport { currentUserAtom, errorsAtom, emailAtom, passwordAtom } from './atoms'\n\nfunction Login() {\n  const [errors, setErrors] = useRecoilState(errorsAtom);\n  // eslint-disable-next-line\n  const [currentUser, setCurrentUser] = useRecoilState(currentUserAtom)\n  const [email, setEmail] = useRecoilState(emailAtom);\n  const [password, setPassword] = useRecoilState(passwordAtom);\n  const history = useNavigate();\n  \n  function handleSubmit(e) {\n    e.preventDefault();\n  \n    const user = {\n      email,\n      password\n    };\n  \n    fetch('/login', {\n      method: 'POST',\n      headers: {'Content-Type': 'Application/json'},\n      body:JSON.stringify(user)\n    }).then(resp => {\n      if(resp.ok){\n        resp.json().then(user => {\n          setCurrentUser(user)\n          history('/blogs');\n        });\n      } else {\n        resp.json().then(json => {\n          setErrors(json.errors)\n          window.alert(errors)\n        });\n      }\n    });\n  };\n  \n  return (\n    <>\n      <Layout header=\"Log in\">\n        <Form onSubmit={handleSubmit}>\n          <Form.Input\n            fluid\n            icon=\"user\"\n            iconPosition=\"left\"\n            placeholder=\"E-mail address\"\n            className=\"auth-input-field\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <Form.Input\n            fluid\n            icon=\"lock\"\n            iconPosition=\"left\"\n            placeholder=\"Password\"\n            type=\"password\"\n            className=\"auth-input-field\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <Button color=\"teal\" fluid size=\"huge\" type='submit'>\n            Login\n          </Button>\n        </Form>\n        <Message size=\"big\">\n          <Link to=\"/signup\">Not Registered?</Link>\n        </Message>\n      </Layout>\n      \n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link, useNavigate  } from \"react-router-dom\";\nimport { Button, Form, Message } from \"semantic-ui-react\";\nimport Layout from \"./Layout\";\n\nfunction Signup() {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [avatar, setAvatar] = useState('')\n  const history = useNavigate();\n\n  function handleSubmit(e){\n    e.preventDefault();\n    \n    const newUser = {\n      first_name: firstName,\n      last_name: lastName,\n      email: email,\n      password: password,\n      avatar: avatar\n    };\n    \n    //add a post to login route and update current user when someone signs up.\n    fetch('/users', {\n      method:'POST',\n      headers: {'Content-Type': 'application/json'},\n      body:JSON.stringify(newUser)\n    })\n    .then(resp => {\n      if(resp.ok) {\n        history('/thank-you')\n      }\n    })\n    \n  }\n    \n        return (\n          <Layout header=\"Sign up to get started\">\n            <Form onSubmit={handleSubmit}>\n              <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"First Name\"\n                className=\"auth-input-field\"\n                name='first_name'\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n              />\n              <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Last Name\"\n                className=\"auth-input-field\"\n                name='last_name'\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n              />\n              <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Email\"\n                className=\"auth-input-field\"\n                name='email'\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              />\n              <Form.Input\n                fluid\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                type=\"password\"\n                className=\"auth-input-field\"\n                name='password'\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n              />\n              <Form.Input \n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Upload Your Avatar\"\n                type='file'\n                className=\"auth-input-field\"\n                name='avatar'\n                value={avatar}\n                onChange={e => setAvatar(e.target.value)}\n              />   \n                         \n              <Button color=\"teal\" fluid size=\"huge\" type='submit'>\n               Sign up\n              </Button>\n              \n\n             </Form>\n          <Message size=\"big\">\n            <Link to=\"/login\">Already Registered?</Link>\n          </Message>\n        </Layout>\n        )\n}\nexport default Signup","import { Card, Button, Header, Segment, Form } from 'semantic-ui-react';\nimport { useRecoilState } from 'recoil'\nimport { currentUserAtom } from './atoms.js';\nimport { useEffect, useState } from 'react';\n\nfunction UserBlogs() {\n    const [currentUser, setCurrentUser] = useRecoilState(currentUserAtom)\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedTitle, setEditedTitle] = useState('');\n    const [editedContent, setEditedContent] = useState('');\n    const [blogObj, setBlogID] = useState('');\n    \n\n    useEffect((e) => {\n      fetch(`/users/${currentUser.id}`)\n      .then(resp => resp.json())\n      .then(blogsArray => {\n        setCurrentUser(blogsArray)\n      })\n    }, [setCurrentUser, currentUser.id, editedTitle, editedContent])\n\n    async function handleDelete(id) {\n      try {\n        await fetch(`/blogs/${id}`, {\n          method: 'DELETE'\n        });\n        setCurrentUser(prevUser => ({\n          ...prevUser,\n          blogs: prevUser.blogs.filter(blog => blog.id !== id)\n        }))\n      } catch (error) {\n        // Handle error\n      }\n    }\n\n    async function handleSubmit(id) {\n      const editedBlog = {\n        title: editedTitle,\n        content: editedContent\n      };\n    \n      try {\n        const updatedBlog = await fetch(`/blogs/${id.id}`, {\n          method:'PATCH',\n          headers: {'Content-Type': 'application/json'},\n          body:JSON.stringify(editedBlog)\n        }).then(response => response.json());\n    \n        setCurrentUser(prevUser => ({\n          ...prevUser,\n          blogs: prevUser.blogs.map(blog => blog.id === updatedBlog.id ? updatedBlog : blog)\n        }));\n      } catch (error) {\n        // Handle error\n      }\n    }\n    \n    \n    \n\n    const userBlogCards = currentUser.blogs\n    ? currentUser.blogs.map((blog) => {\n        return (\n        <>\n          <Card\n            key={blog.id}\n            fluid\n            color=\"black\"\n            header={blog.title}\n            description={`${blog.content.substring(0, 300)}...`}\n            extra={\n              <div>\n                <Button onClick={(e) => {\n                  setIsEditing(!isEditing)\n                  setBlogID(blog)\n                  setEditedTitle(blog.title)\n                  setEditedContent(blog.content)\n                  }}>Edit</Button>\n                <Button color=\"red\" onClick={() => handleDelete(blog.id)}>\n                  Delete\n                </Button>\n              </div>\n            }\n          />\n        </>\n        );\n      })\n    : <Segment><Header as='h1' >Please log in to see your blogs</Header></Segment>;\n\n    return (\n      <Card.Group>\n        {userBlogCards}\n        {isEditing && (\n          <Segment>\n            <Form onSubmit={() => {\n              handleSubmit(blogObj);\n              setIsEditing(false);                 \n              }}>\n              {<Form.Field>\n                <label>Title</label>\n                <input\n                  name=\"title\"\n                  value={editedTitle} \n                  onChange={(e) => setEditedTitle(e.target.value)}\n                />\n                <label>Content</label>\n                <input\n                  name=\"content\"\n                  value={editedContent} \n                  onChange={(e) => setEditedContent(e.target.value)}\n                />\n              </Form.Field>\n              }\n              <Button type=\"submit\">Save Changes</Button>\n              <Button onClick={() =>setIsEditing(false)}>Cancel</Button>\n            </Form>\n          </Segment>\n    )}\n      </Card.Group>\n    );\n  }\n  \n  export default UserBlogs;\n  ","import { Container, Header, Form, Button } from \"semantic-ui-react\";\nimport { useRecoilValue } from \"recoil\";\nimport { useParams } from \"react-router-dom\";\nimport { blogsAtom } from './atoms.js';\nimport { useState } from \"react\";\nimport { useRecoilState } from 'recoil';\nimport { currentUserAtom } from \"./atoms.js\";\n\nfunction SelectedBlog() {\n  const blogs = useRecoilValue(blogsAtom);\n  const { slug } = useParams();\n  const [commentField, setCommentField] = useState('');\n  // eslint-disable-next-line\n  const [currentUser, setCurrentUser] = useRecoilState(currentUserAtom)\n\n\n  const selectedBlog = blogs.find(blog => blog.slug === slug);\n\n  const [allComments, setAllComments] = useState(selectedBlog.reviews.map(review => {\n  return { comment: review.comment }\n  }));\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    const newcomment = {\n    comment: commentField,\n    blog_id: selectedBlog.id,\n    user_id: currentUser.id\n    };\n\n    const configObject = {\n      method: 'POST',\n      headers: {'Content-Type': 'Application/json'},\n      body: JSON.stringify(newcomment)\n    };\n\n    fetch(`/reviews`, configObject)\n    .then(resp => resp.json())\n    .then((data) => {\n      setAllComments([...allComments, { comment: commentField }])\n    })  \n\n  };\n  \n  return(\n    <>\n      <Container>\n        <Header>{selectedBlog.title}</Header>\n          <img alt={selectedBlog.user.first_name} src={selectedBlog.user.avatar} width={'200px'} height={'200px'}/>\n          <h4>{`Written by: ${selectedBlog.user.first_name} ${selectedBlog.user.last_name}`}</h4>\n          <p>{selectedBlog.content}</p>\n          <p>{`Category: ${selectedBlog.tag.category}`}</p>\n        <Header as='h1'>Reviews</Header>\n          {allComments.map(comment => (\n          <h4>{comment.comment}</h4>\n          ))}\n        <Header as='h1'>Leave A Review</Header>\n        <Form onSubmit={(e) => handleSubmit(e)}>\n          <Form.Field>\n            <label>Comment</label>\n            <input\n              name=\"comment\"\n              value={commentField}\n              onChange={(e) => setCommentField(e.target.value)}\n            />\n          </Form.Field>\n          <Button type=\"submit\">Comment</Button>\n        </Form>\n      </Container>\n    </>\n    )\n    };\n    \n    export default SelectedBlog","import { Form, FormField, Button } from \"semantic-ui-react\";\nimport { currentUserAtom } from './atoms';\nimport { useRecoilValue } from 'recoil';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction BlogForm() {\n  const currentUser = useRecoilValue(currentUserAtom);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [tag, setTag] = useState('');\n  // eslint-disable-next-line\n  const [errors, setErrors] = useState([]);\n  const history = useNavigate();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const newBlog = {\n      title: title,\n      content: content,\n      tag_id: tag,\n      user_id: currentUser.id\n    };\n\n    const configObject = {\n      method: 'POST',\n      headers: {'Content-Type': 'Application/json'},\n      body: JSON.stringify(newBlog)\n    };\n\n    fetch('/blogs', configObject)\n    .then(resp => {\n      if(resp.ok){\n        history('/posted')\n      }\n    })\n  };\n\n    return(\n      <Form onSubmit={handleSubmit}>\n        <FormField>\n          <label>Title</label>\n          <input \n            name=\"title\"  \n            value={title}\n            onChange={e => setTitle(e.target.value)} \n          />\n        </FormField>\n        <FormField>\n          <label>Tell your story below...</label>\n          <input \n            name=\"content\" \n            value={content}\n            onChange={e => setContent(e.target.value)} \n          />\n        </FormField>\n        \n      <label>\n          <strong>Add a tag...</strong>\n          <select onChange={e => setTag(e.target.value)} >\n            <option>Add a tag</option>\n            <option value=\"1\">Fashion</option>\n            <option value=\"2\">Travel</option>\n            <option value=\"3\">Music</option>\n            <option value=\"4\">DIY</option>\n            <option value=\"5\">Sports</option>\n            <option value=\"6\">Lifestyle</option>\n            <option value=\"7\">Finance</option>\n            <option value=\"8\">Politics</option>\n            <option value=\"9\">Parenting</option>\n            <option value=\"10\">Movies</option>\n            <option value=\"11\">Tech</option>\n            <option value=\"12\">Development</option>\n            <option value=\"13\">Gaming</option>\n            <option value=\"14\">Auto</option>\n          </select>\n        </label>\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    );\n  }\n  \n  export default BlogForm;\n  ","import Confetti from 'react-confetti'\nimport { Message } from 'semantic-ui-react'\n\nfunction Done() {\n  return(\n    <>\n      <Confetti />\n      <Message>\n        <Message.Header>Thank you for signing up!</Message.Header>\n          <Message.List>\n            <Message.Item>Navigate though the navbar to create a blog!</Message.Item>\n            <Message.Item>Or click the logout button to logout.</Message.Item>\n          </Message.List>\n      </Message>\n    </>\n  )\n}\nexport default Done;","import Confetti from 'react-confetti'\nimport { Message } from 'semantic-ui-react'\n\nfunction ThankYou() {\n    return(\n        <>\n          <Confetti />\n          <Message>\n            <Message.Header>Your blog has been successfully posted!</Message.Header>\n              <Message.List>\n                <Message.Item>Navigate to your blogs to check it out!</Message.Item>\n              </Message.List>\n          </Message>\n        </>\n    )\n\n};\n  export default ThankYou;\n  ","import Header from './components/Header';\nimport Footer from './components/Footer';\nimport Homepage from './components/Homepage';\nimport Login from './components/Login'\nimport Signup from './components/Signup';\nimport UserBlogs from './components/UserBlogs';\nimport SelectedBlog from './components/SelectedBlog';\nimport BlogForm from './components/BlogForm';\nimport Done from './components/Done';\nimport { Routes, Route } from 'react-router-dom'\nimport ThankYou from './components/ThankYou';\n\nfunction App() {\n  \n  return (\n    <>\n      <Header />\n        \n          <Routes>\n            <Route path='/' element={ <Homepage /> }/>\n\n            <Route path='/login' element={ <Login /> }/>\n\n            <Route path='/signup' element={ <Signup /> } />\n\n            <Route path='/blogs' element={ <UserBlogs /> }/>\n\n            <Route path={'/:slug'} element={ <SelectedBlog /> }/>\n\n            <Route path='/create' element={ <BlogForm /> }/>\n\n            <Route path='/thank-you' element={ <Done /> } />\n\n            <Route path='/posted' element={ <ThankYou /> } />\n          </Routes>\n        \n      <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css' \nimport { BrowserRouter } from 'react-router-dom'\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <RecoilRoot>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </RecoilRoot>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}